# By: Ron Cordell - roncordell
#  I didn't see this anywhere, so I thought I'd post it here. This is the script from Quartz to create the tables in a MySQL database, modified to use INNODB instead of MYISAM.


# make sure you have UTF-8 collaction for best .NET interoperability
# CREATE DATABASE quartznet CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

DROP TABLE IF EXISTS JOB_NODE_QRTZ_FIRED_TRIGGERS;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_PAUSED_TRIGGER_GRPS;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_SCHEDULER_STATE;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_LOCKS;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_SIMPLE_TRIGGERS;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_SIMPROP_TRIGGERS;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_CRON_TRIGGERS;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_BLOB_TRIGGERS;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_TRIGGERS;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_JOB_DETAILS;
DROP TABLE IF EXISTS JOB_NODE_QRTZ_CALENDARS;

CREATE TABLE JOB_NODE_QRTZ_JOB_DETAILS(
SCHED_NAME VARCHAR(120) NOT NULL,
JOB_NAME VARCHAR(200) NOT NULL,
JOB_GROUP VARCHAR(200) NOT NULL,
DESCRIPTION VARCHAR(250) NULL,
JOB_CLASS_NAME VARCHAR(250) NOT NULL,
IS_DURABLE BOOLEAN NOT NULL,
IS_NONCONCURRENT BOOLEAN NOT NULL,
IS_UPDATE_DATA BOOLEAN NOT NULL,
REQUESTS_RECOVERY BOOLEAN NOT NULL,
JOB_DATA BLOB NULL,
PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
JOB_NAME VARCHAR(200) NOT NULL,
JOB_GROUP VARCHAR(200) NOT NULL,
DESCRIPTION VARCHAR(250) NULL,
NEXT_FIRE_TIME BIGINT(19) NULL,
PREV_FIRE_TIME BIGINT(19) NULL,
PRIORITY INTEGER NULL,
TRIGGER_STATE VARCHAR(16) NOT NULL,
TRIGGER_TYPE VARCHAR(8) NOT NULL,
START_TIME BIGINT(19) NOT NULL,
END_TIME BIGINT(19) NULL,
CALENDAR_NAME VARCHAR(200) NULL,
MISFIRE_INSTR SMALLINT(2) NULL,
JOB_DATA BLOB NULL,
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
REFERENCES JOB_NODE_QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_SIMPLE_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
REPEAT_COUNT BIGINT(7) NOT NULL,
REPEAT_INTERVAL BIGINT(12) NOT NULL,
TIMES_TRIGGERED BIGINT(10) NOT NULL,
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_CRON_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
CRON_EXPRESSION VARCHAR(120) NOT NULL,
TIME_ZONE_ID VARCHAR(80),
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_SIMPROP_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOLEAN NULL,
    BOOL_PROP_2 BOOLEAN NULL,
    TIME_ZONE_ID VARCHAR(80) NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
    REFERENCES JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_BLOB_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
BLOB_DATA BLOB NULL,
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),
FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_CALENDARS (
SCHED_NAME VARCHAR(120) NOT NULL,
CALENDAR_NAME VARCHAR(200) NOT NULL,
CALENDAR BLOB NOT NULL,
PRIMARY KEY (SCHED_NAME,CALENDAR_NAME))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_PAUSED_TRIGGER_GRPS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_FIRED_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
ENTRY_ID VARCHAR(140) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
INSTANCE_NAME VARCHAR(200) NOT NULL,
FIRED_TIME BIGINT(19) NOT NULL,
SCHED_TIME BIGINT(19) NOT NULL,
PRIORITY INTEGER NOT NULL,
STATE VARCHAR(16) NOT NULL,
JOB_NAME VARCHAR(200) NULL,
JOB_GROUP VARCHAR(200) NULL,
IS_NONCONCURRENT BOOLEAN NULL,
REQUESTS_RECOVERY BOOLEAN NULL,
PRIMARY KEY (SCHED_NAME,ENTRY_ID))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_SCHEDULER_STATE (
SCHED_NAME VARCHAR(120) NOT NULL,
INSTANCE_NAME VARCHAR(200) NOT NULL,
LAST_CHECKIN_TIME BIGINT(19) NOT NULL,
CHECKIN_INTERVAL BIGINT(19) NOT NULL,
PRIMARY KEY (SCHED_NAME,INSTANCE_NAME))
ENGINE=InnoDB;

CREATE TABLE JOB_NODE_QRTZ_LOCKS (
SCHED_NAME VARCHAR(120) NOT NULL,
LOCK_NAME VARCHAR(40) NOT NULL,
PRIMARY KEY (SCHED_NAME,LOCK_NAME))
ENGINE=InnoDB;

CREATE INDEX IDX_JOB_NODE_QRTZ_J_REQ_RECOVERY ON JOB_NODE_QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_JOB_NODE_QRTZ_J_GRP ON JOB_NODE_QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP);

CREATE INDEX IDX_JOB_NODE_QRTZ_T_J ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_JG ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_C ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_G ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_STATE ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_N_STATE ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_N_G_STATE ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_NEXT_FIRE_TIME ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_NFT_ST ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_NFT_MISFIRE ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_NFT_ST_MISFIRE ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
CREATE INDEX IDX_JOB_NODE_QRTZ_T_NFT_ST_MISFIRE_GRP ON JOB_NODE_QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

CREATE INDEX IDX_JOB_NODE_QRTZ_FT_TRIG_INST_NAME ON JOB_NODE_QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME);
CREATE INDEX IDX_JOB_NODE_QRTZ_FT_INST_JOB_REQ_RCVRY ON JOB_NODE_QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_JOB_NODE_QRTZ_FT_J_G ON JOB_NODE_QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_JOB_NODE_QRTZ_FT_JG ON JOB_NODE_QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_JOB_NODE_QRTZ_FT_T_G ON JOB_NODE_QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_JOB_NODE_QRTZ_FT_TG ON JOB_NODE_QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);



--
-- Table structure for table `job_node_trigger_info`
--

DROP TABLE IF EXISTS `job_node_trigger_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `job_node_trigger_info` (
  `NTI_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '任务触发器主键',
  `NTI_KEY` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '任务触发器的key，用于标识唯一性',
  `NTI_LB_STRATEGY` varchar(30) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '负载均衡策略',
  `NTI_CRON` varchar(30) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '任务触发器cron表达式',
  `NTI_NAME` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '任务触发器名称',
  `NTI_CREATE_TIME` datetime DEFAULT NULL COMMENT '创建时间',
  `NTI_START_TIME` datetime DEFAULT NULL COMMENT '启动时间',
  `NTI_JOB_CLASS` text COLLATE utf8mb4_unicode_ci COMMENT '触发该任务的实现类全限定名',
  `NTI_MARK` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '备注信息',
  PRIMARY KEY (`NTI_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='节点任务信息';
/*!40101 SET character_set_client = @saved_cs_client */;


--
-- Table structure for table `job_node_execute_detail`
--

DROP TABLE IF EXISTS `job_node_execute_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `job_node_execute_detail` (
  `NED_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键自增',
  `NED_TRIGGER_KEY` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT '任务触发器key',
  `NED_NODE_ADDRESS` varchar(30) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT '任务节点地址',
  `NED_LD_STRATEGY` varchar(30) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT '任务负载策略',
  `NED_PARAM` text COLLATE utf8_unicode_ci COMMENT '任务执行参数',
  `NED_START_TIME` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '任务开始时间',
  `NED_RETRY_COUNT` int(11) DEFAULT '0' COMMENT '重试次数',
  `NED_SUCCESS_TIME` datetime DEFAULT NULL COMMENT '执行完成时间',
  `NED_STATUS` varchar(20) COLLATE utf8_unicode_ci DEFAULT 'WAIT' COMMENT '任务执行状态，SUCCESS：执行成功,ERROR：执行失败,RETRY：重试，WAIT：等待执行',
  `NED_MARK` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT '备注信息',
  PRIMARY KEY (`NED_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=13461 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='任务执行详情信息表';
/*!40101 SET character_set_client = @saved_cs_client */;


--
-- Table structure for table `job_node_info`
--

DROP TABLE IF EXISTS `job_node_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `job_node_info` (
  `JNI_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '节点主键',
  `JNI_ADDRESS` varchar(30) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT '节点地址，格式为：IP:PORT，如：127.0.0.1:8080',
  `JNI_LAST_HEART_TIME` datetime DEFAULT NULL COMMENT '最后一次心跳时间',
  `JNI_CREATE_TIME` datetime DEFAULT NULL COMMENT '任务节点信息创建时间，第一次心跳时间',
  `JNI_MARK` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT '备注信息',
  PRIMARY KEY (`JNI_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=214 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='任务节点信息';

commit;
